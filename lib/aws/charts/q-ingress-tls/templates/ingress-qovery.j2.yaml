{%- if routes|length >= 1  %}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ sanitized_name }}
  namespace: {{ namespace }}
  labels:
    ownerId: {{ owner_id }}
    routerName: {{ sanitized_name }}
    routerId: {{ id }}
    envId: {{ environment_id }}
    fqdn: "{{ router_default_domain }}"
  annotations:
    external-dns.alpha.kubernetes.io/hostname: {{ router_default_domain }}
    external-dns.alpha.kubernetes.io/ttl: "300"
    external-dns.alpha.kubernetes.io/target: "{{ external_ingress_hostname_default }}"
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: {{ metadata_annotations_cert_manager_cluster_issuer }}
    kubernetes.io/ingress.class: "nginx-qovery"
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # CORS is not flexible enough with nginx ingress annotations yet, so we add it into snippet
      if ($http_origin ~* "^https?://(?:{{ router_default_domain | replace(".", "\.") }})$") {
        set $cors "true";
      }
      if ($request_method = 'OPTIONS') {
        set $cors "${cors}options";
      }

      if ($cors = "true") {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
      }

      if ($cors = "trueoptions") {
        add_header 'Access-Control-Allow-Origin' "$http_origin";
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, PATCH, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
spec:
  tls:
    - hosts:
        - "{{ router_tls_domain }}"
  # We dont use secret name as we want to rely on default tls certificate from ingress controller
  # which has our wildcard certificate https://cert-manager.io/next-docs/faq/kubed/
  rules:
    - host: "{{ router_default_domain }}"
      http:
        paths:
        {%- for route in routes %}
        - path: "{{ route.path }}"
          backend:
            serviceName: "{{ route.application_name }}"
            servicePort: {{ route.application_port }}
        {%- endfor %}
{%- endif %}
